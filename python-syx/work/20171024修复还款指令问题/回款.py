import os
import mysql.connector

new_conn = mysql.connector.connect(host='172.27.48.181', user='search', password='search@zyfax.com', database='product')
new_cursor = new_conn.cursor(dictionary=True)


def getOne(sql, *args):
    new_cursor.execute(sql)
    return new_cursor.fetchone()


def getAll(sql, *args):
    new_cursor.execute(sql)
    return new_cursor.fetchall()


def DBclose():
    new_conn.close()


def get_asset_info(assetIds):
    split = assetIds.split(",")
    # 1.查询操作
    # 编写sql 查询语句  user 对应我的表名
    for assetId in split:
        sql1 = "SELECT * FROM account.t_user_account_%02s WHERE uid=%s ;" % (str(assetId)[-2:], assetId)
        one = getOne(sql1)
        print(str(one['uid']) + "-" + str(one['frozen']) + "-" + str(one['balance']))


get_asset_info('''274815852203328042,
               274535442303812132,
               258389118303990100,
               264685233303341070,
               274976250203501199,
               258047334303362113,
               257437130203288032,
               258636089203416141,
               258566199303199097,
               274893148203381193,
               274877135303113015,
               258909777203995040,
               257619409303704190,
               267198750203906040,
               272212605303195073,
               258303975203961156,
               274875094303108172,
               255801602203155106,
               262263424303948115,
               272473772203419030,
               260804923203479131,
               274874468303107144,
               260449262203014148,
               274888245203366019,
               267199211203909108,
               265470588203172045,
               266255694303426154,
               262437533203383067,
               258633198203406088,
               258305977203973093,
               274968764203488117,
               274876587303112178,
               259942597203762195,
               267200431203919030,
               263659668303640080,
               264701807303489032,
               258288696203885009,
               262346307203206084,
               257434430303202000,
               266233100303362094,
               258289493203889117,
               255091617203037093,
               258124005303489008,
               258202890203725147,
               258128383303527175,
               263647851203603099,
               253893447203088129,
               261312010203366097,
               260019094203934110,
               266856743203572030,
               261862000303351058,
               261161981203086174,
               258740589203649194,
               263661366203673077,
               276774451203425022,
               258822878303744120,
               270393996303244007,
               256212820203618162,
               255957254203351004,
               267189418203845171,
               260018076203927180,
               263128779303635180,
               259084115203219125,
               258651245203500125,
               267125125303725055,
               263055877203613097,
               260878805303384106,
               258736073303555159,
               258218694203794066,
               263750564303789018,
               271422093303306117,
               263216613203834043,
               258812380303698097,
               259502440203958065,
               262528678203662012,
               266508061203845179,
               257255215203987014,
               258830117203879112,
               253893399203067058,
               261504731303625091,
               263555425203345014,
               261847793303317191,
               262358400303151136,
               267197147303814000,
               258726706303519043,
               267203266203947172,
               261673400203978010,
               258110064303430085,
               261497846303605049,
               261687132303002089,
               267207234203984078,
               260106416203208103''')
